{"version":3,"sources":["components/ContactList/ContactUser/ContactUser.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Loader/Loader.module.css","components/ContactForm/ContactForm.module.css","redux/form/form-actions.js","redux/form/form-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactUser/ContactUser.js","components/Loader/Loader.js","redux/form/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/form/form-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","name","number","dispatch","a","contact","post","data","id","delete","error","get","ContactForm","state","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","contacts","map","includes","alert","onSubmit","resetForm","this","className","styles","form","labelForm","input","type","onChange","pattern","title","required","btnAddContact","Component","connect","items","formOperations","onDeleteContacts","contactItem","phone","btnDelete","onClick","App","loader","color","height","width","timeout","React","getAllContacts","getFilter","filter","getLoading","loading","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","ContactList","fetchContacts","isLoadingContacts","list","contactsSelectors","e","formActions","target","inputFilter","createReducer","_","payload","action","console","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","stor","next","log","logger","store","configureStore","reducer","formReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83ec9cc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactUser_contactItem__3AgfX\",\"name\":\"ContactUser_name__21QAz\",\"phone\":\"ContactUser_phone__1zdtw\",\"btnDelete\":\"ContactUser_btnDelete__3Itj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\",\"labelForm\":\"Filter_labelForm__1mPQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btnAddContact\":\"ContactForm_btnAddContact__2bijG\",\"labelForm\":\"ContactForm_labelForm__MA3GW\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError')\n\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError')\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError')\n\n\n\nexport const filterContacts = createAction(\"form/filterContacts\");","import axios from \"axios\";\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n} from './form-actions';\n\n\naxios.defaults.baseURL = ' http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactRequest());\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactSuccess(data))\n\n    } catch (error) {\n\n        dispatch(fetchContactError(error));\n    }\n};\n\nconst addContact = ({ name, number }) => async dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post('/contacts', contact);\n        dispatch(addContactSuccess(data))\n    } catch (error) {\n        dispatch(addContactError(error))\n    }\n}\n\nconst deleteContact = id => async dispatch => {\n    dispatch(deleteContactRequest())\n\n    try {\n        const { data } = axios.delete(`/contacts/${id}`)\n        dispatch(deleteContactSuccess(id))\n    } catch (error) {\n        dispatch(deleteContactError(error))\n    }\n\n}\n\nexport default {\n    addContact,\n    deleteContact,\n    fetchContacts,\n}","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport formOperations from \"../../redux/form/form-operations\";\n\nclass ContactForm extends Component {\n    state = {\n        name: \"\",\n        number: \"\",\n    };\n\n    handelChange = (event) => {\n        const { name, value } = event.currentTarget;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handelSubmit = (event) => {\n        event.preventDefault();\n\n        const { name } = this.state;\n        const arrNames = this.props.contacts.map((contact) => contact.name);\n\n        arrNames.includes(name)\n            ? alert(`${name} is already in contacts`)\n            : this.props.onSubmit(this.state);\n        this.resetForm();\n    };\n\n    resetForm = () => {\n        this.setState({\n            name: \"\",\n            number: \"\",\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={styles.form} onSubmit={this.handelSubmit}>\n                <label className={styles.labelForm}>\n                    Name{\" \"}\n                    <input\n                        className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handelChange}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                    />\n                </label>\n                <label className={styles.labelForm}>\n                    Number{\" \"}\n                    <input\n                        className={styles.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        onChange={this.handelChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                    />\n                </label>\n                <button className={styles.btnAddContact} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contacts: state.contacts.items,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmit: (value) => dispatch(formOperations.addContact(value)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactUser.module.css\";\nimport formOperations from \"../../../redux/form/form-operations\";\n\nconst ContactUser = ({ id, name, number, onDeleteContacts }) => {\n    return (\n        <li className={styles.contactItem}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.phone}>{number}</span>\n            <button\n                className={styles.btnDelete}\n                type=\"button\"\n                onClick={() => onDeleteContacts(id)}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onDeleteContacts: (id) => dispatch(formOperations.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactUser);\n\nContactUser.propTypes = {\n    onDeleteContacts: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport styles from \"./Loader.module.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div className={styles.loader}>\n                <Loader\n                    type=\"Bars\"\n                    color=\"#81abab\"\n                    height={60}\n                    width={60}\n                    timeout={3000}\n                />\n            </div>\n        );\n    }\n}","import { createSelector } from '@reduxjs/toolkit';\n\n\n\n\nconst getLoading = state => state.contacts.loading;\nconst getAllContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.error;\n\n\nconst getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter))\n    }\n);\n\nexport default {\n    getLoading,\n    getAllContacts,\n    getFilter,\n    getError,\n    getVisibleContacts,\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport formOperations from \"../../redux/form/form-operations\";\nimport ContactUser from \"./ContactUser\";\nimport Loader from '../Loader/'\nimport contactsSelectors from '../../redux/form/contacts-selectors';\n\n\nclass ContactList extends Component {\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n    render() {\n\n        const { contacts, onDeleteContacts, isLoadingContacts, error } = this.props\n        return (\n            <>\n                {isLoadingContacts && <Loader />}\n                {error && <p>There is no contact on your list</p>}\n                <ul className={styles.list}>\n\n                    {contacts.map(({ id, name, number }) => {\n\n                        return (\n\n\n                            <ContactUser\n                                key={id}\n                                name={name}\n                                number={number}\n                                onDeleteContacts={onDeleteContacts}\n                                id={id}\n                            />\n\n                        );\n                    })}\n                </ul>\n            </>\n        )\n    }\n\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired\n    ),\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: contactsSelectors.getVisibleContacts(state),\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    error: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchContacts: () => dispatch(formOperations.fetchContacts()),\n        onDeleteContacts: (id) => dispatch(formOperations.deleteContact(id)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\n\nimport * as formActions from \"../../redux/form/form-actions\";\nimport contactsSelectors from '../../redux/form/contacts-selectors';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <div className={styles.filter}>\n            <label className={styles.labelForm}>\n                Find contacts by name\n                <input\n                    className={styles.inputFilter}\n                    type=\"text\"\n                    value={value}\n                    onChange={onChange}\n                />\n            </label>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChange: (e) => dispatch(formActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    filterContacts,\n} from \"./form-actions\";\n\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n})\n\nconst filter = createReducer(\"\", {\n    [filterContacts]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContactError]: (console.error),\n    [addContactError]: (console.error),\n    [deleteContactError]: (console.error),\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error,\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\n\nimport logger from \"redux-logger\";\nimport formReducer from \"./form/form-reducer\";\n\nconst myMiddlWare = stor => next => action => {\n    console.log('прослойка ', action)\n    next(action)\n}\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    myMiddlWare,\n    logger,\n];\n\n\n\nconst store = configureStore({\n    reducer: {\n        contacts: formReducer,\n    },\n    middleware: middleware,\n    devTools: process.env.NODE_ENV === \"development\",\n});\n\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n      <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}